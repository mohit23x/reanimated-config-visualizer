{"version":3,"sources":["src/components/PlayButton.tsx","src/assets/Setting.tsx","src/components/Actions.tsx","src/styles/index.tsx","src/components/Rotate.tsx","src/components/Movement.tsx","src/components/Scale.tsx","App.tsx","src/screen/HomeScreen.tsx","src/components/AnimatedNumber.tsx","src/components/Slider.tsx","src/components/Attribution.tsx","src/components/ConfigureLimit.tsx","src/components/SettingModal.tsx","src/components/InputSection.tsx","src/components/AnimationOptions.tsx","src/components/OutputSection.tsx","src/assets/Rotate.tsx","src/assets/Move.tsx","src/assets/Scale.tsx","src/constants/index.tsx","src/components/ui.tsx"],"names":["PlayButton","onPress","animating","stopAnimation","opacity","style","s","btn","title","StyleSheet","create","backgroundColor","theme","primary","minWidth","flex","text","fontWeight","letterSpacing","SvgComponent","props","x","y","viewBox","xmlSpace","enableBackground","d","Actions","handleSetting","View","flexDirection","alignItems","TouchableOpacity","setting","Setting","fill","height","width","paddingHorizontal","justifyContent","borderRadius","marginRight","commonTheme","font","m","l","fade","half","white","lightTheme","name","background","surface","secondary","border","slider","icon","darkTheme","Sugar","ThemeProvider","useTheme","Rotate","animatedStyles","useAnimatedStyle","transform","rotate","value","boxBorder","box","constants","borderWidth","borderColor","Movement","translateY","margin","Scale","scale","circleBorder","circle","App","hidden","reducer","state","action","type","payload","HomeScreen","useSharedValue","React","DEFAULT_CONFIG","dispatch","setAnimating","animationCompleted","cancelAnimation","withSpring","runOnJS","handleChange","Animated","addWhitelistedNativeProps","ReTextInput","createAnimatedComponent","TextInput","WebText","inputAnimatedRef","useAnimatedRef","useDerivedValue","current","setNativeProps","Math","floor","toString","defaultValue","ref","NativeText","animatedText","AnimatedNumber","os","web","color","Slider","stateKey","minimumValue","maximumValue","step","val","setVal","container","textContainer","Text","label","onValueChange","e","newVal","onSlidingComplete","minimumTrackTintColor","maximumTrackTintColor","thumbTintColor","marginVertical","marginLeft","ASSETS","url","TECH","Link","padding","Linking","canOpenURL","then","openURL","Attribution","map","key","fontSize","textAlign","ConfigureLimit","limit","setConfig","handleSave","handleReset","damping","field","mass","stiffness","velocity","btnContainer","InputCounter","counterContainer","counterBtn","btnText","counterValue","marginHorizontal","DarkModeSetting","isLight","darkModeContainer","Switch","thumbColor","build","SettingModal","toggleModal","show","Modal","animationType","onRequestClose","visible","ScrollView","Image","source","uri","image","flexGrow","input","resizeMode","alignSelf","persistConfig","AsyncStorage","setItem","JSON","stringify","DEFAULT_MAX_LIMIT","InputSection","setShow","LIMIT","c","obj","Object","assign","a","async","getItem","data","parse","getConfig","section","STEP","alert","Option","option","toggleAnimation","active","Icon","activeColor","outputOption","outputText","AnimationOptions","options","contentContainerStyle","scroll","horizontal","maxWidth","undefined","maxHeight","marginBottom","keys","examples","item","OutputSection","setActive","AnimationComp","component","head","playground","RotateIcon","ScaleIcon","movement","MoveIcon","Container","Section","Divider","divider","Button","minHeight"],"mappings":"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","file":"static/js/app.a082ad31.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport { StyleSheet } from 'src/styles';\r\nimport { Button } from './ui';\r\n\r\nconst activeOpacity = 0.6;\r\n\r\nexport const PlayButton = ({\r\n  onPress,\r\n  animating,\r\n  stopAnimation,\r\n}: {\r\n  onPress: () => void;\r\n  animating: boolean;\r\n  stopAnimation: () => void;\r\n}) => {\r\n  const handlePress = () => (animating ? stopAnimation() : onPress());\r\n\r\n  const opacity = animating ? activeOpacity : 1;\r\n\r\n  return (\r\n    <Button\r\n      onPress={handlePress}\r\n      style={{ ...s.btn, opacity }}\r\n      title={animating ? 'STOP' : 'PLAY'}\r\n    />\r\n  );\r\n};\r\n\r\nconst s = StyleSheet.create({\r\n  btn: {\r\n    backgroundColor: StyleSheet.theme.primary,\r\n    minWidth: 220,\r\n    flex: 1,\r\n  },\r\n  text: {\r\n    fontWeight: 'bold',\r\n    letterSpacing: 2,\r\n  },\r\n});\r\n","import * as React from 'react';\r\nimport Svg, { Path } from 'react-native-svg';\r\n\r\nfunction SvgComponent(props) {\r\n  return (\r\n    <Svg\r\n      x=\"0px\"\r\n      y=\"0px\"\r\n      viewBox=\"0 0 456.556 456.556\"\r\n      xmlSpace=\"preserve\"\r\n      enableBackground=\"new 0 0 456.556 456.556\"\r\n      {...props}\r\n    >\r\n      <Path d=\"M97.564 79.443H13.428C6.011 79.443 0 73.428 0 66.015s6.011-13.428 13.428-13.428h84.136c7.417 0 13.428 6.015 13.428 13.428s-6.011 13.428-13.428 13.428z\" />\r\n      <Path d=\"M145.643 127.518c-33.916 0-61.507-27.591-61.507-61.504 0-33.92 27.591-61.511 61.507-61.511s61.507 27.591 61.507 61.511c0 33.914-27.591 61.504-61.507 61.504zm0-96.158c-19.107 0-34.651 15.547-34.651 34.654s15.544 34.647 34.651 34.647 34.651-15.54 34.651-34.647S164.75 31.36 145.643 31.36zM443.128 79.443H242.433c-7.417 0-13.428-6.015-13.428-13.428s6.011-13.428 13.428-13.428h200.694c7.417 0 13.428 6.015 13.428 13.428s-6.01 13.428-13.427 13.428zM325.936 289.782c-33.917 0-61.507-27.591-61.507-61.504s27.591-61.504 61.507-61.504 61.507 27.591 61.507 61.504-27.59 61.504-61.507 61.504zm0-96.151c-19.107 0-34.651 15.54-34.651 34.647s15.544 34.647 34.651 34.647 34.651-15.54 34.651-34.647-15.544-34.647-34.651-34.647zM229.149 241.706H13.428C6.011 241.706 0 235.691 0 228.278s6.011-13.428 13.428-13.428h215.721c7.417 0 13.428 6.015 13.428 13.428s-6.011 13.428-13.428 13.428z\" />\r\n      <Path d=\"M443.128 241.706h-69.113c-7.417 0-13.428-6.015-13.428-13.428s6.011-13.428 13.428-13.428h69.113c7.417 0 13.428 6.015 13.428 13.428s-6.011 13.428-13.428 13.428zM130.62 452.052c-33.916 0-61.507-27.591-61.507-61.511 0-33.913 27.591-61.504 61.507-61.504s61.507 27.591 61.507 61.504c0 33.92-27.591 61.511-61.507 61.511zm0-96.158c-19.107 0-34.651 15.54-34.651 34.647s15.544 34.654 34.651 34.654 34.651-15.547 34.651-34.654-15.544-34.647-34.651-34.647zM443.128 403.97H227.407c-7.417 0-13.428-6.015-13.428-13.428 0-7.413 6.011-13.428 13.428-13.428h215.721c7.417 0 13.428 6.015 13.428 13.428 0 7.413-6.011 13.428-13.428 13.428z\" />\r\n      <Path d=\"M82.541 403.97H13.428C6.011 403.97 0 397.955 0 390.541c0-7.413 6.011-13.428 13.428-13.428h69.113c7.417 0 13.428 6.015 13.428 13.428 0 7.414-6.011 13.429-13.428 13.429z\" />\r\n    </Svg>\r\n  );\r\n}\r\n\r\nexport default SvgComponent;\r\n","import * as React from 'react';\r\nimport { TouchableOpacity, View } from 'react-native';\r\nimport { StyleSheet } from 'src/styles';\r\nimport { PlayButton } from './PlayButton';\r\nimport SettingIcon from 'src/assets/Setting';\r\n\r\nexport const Actions = ({\r\n  onPress,\r\n  animating,\r\n  stopAnimation,\r\n  handleSetting,\r\n}: {\r\n  animating: boolean;\r\n  onPress: () => void;\r\n  stopAnimation: () => void;\r\n  handleSetting: () => void;\r\n}) => {\r\n  return (\r\n    <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n      <View>\r\n        <TouchableOpacity onPress={handleSetting} style={s.setting}>\r\n          <SettingIcon fill={'#000'} height={30} width={30} />\r\n        </TouchableOpacity>\r\n      </View>\r\n      <PlayButton\r\n        animating={animating}\r\n        onPress={onPress}\r\n        stopAnimation={stopAnimation}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst s = StyleSheet.create({\r\n  setting: {\r\n    height: 50,\r\n    paddingHorizontal: 15,\r\n    backgroundColor: StyleSheet.theme.primary,\r\n    justifyContent: 'center',\r\n    borderRadius: 10,\r\n    marginRight: 5,\r\n  },\r\n});\r\n","import Sugar from 'react-native-sugar-style';\r\n\r\nconst commonTheme = {\r\n  font: {\r\n    s: 10,\r\n    m: 18,\r\n    l: 24,\r\n  },\r\n  opacity: {\r\n    fade: 0.7,\r\n    half: 0.4,\r\n  },\r\n  white: '#fbfbfb',\r\n};\r\n\r\nexport const lightTheme = {\r\n  ...commonTheme,\r\n  name: 'light',\r\n  background: '#f5f5f5',\r\n  surface: '#e9e9e9',\r\n  text: '#2b2b2b',\r\n  primary: '#feca57',\r\n  secondary: '#ff9ff3',\r\n  border: '#A1A9B1',\r\n  slider: '#222f3e',\r\n  icon: '#222f3e',\r\n};\r\n\r\nexport const darkTheme = {\r\n  ...commonTheme,\r\n  name: 'dark',\r\n  background: '#2b2b2b',\r\n  surface: '#111',\r\n  secondary: '#ff9ff3',\r\n  text: '#f5f5f5',\r\n  primary: '#feca57',\r\n  border: '#A1A9B1',\r\n  slider: '#888',\r\n  icon: '#ccc',\r\n};\r\n\r\nexport type Theme = typeof darkTheme;\r\nexport const { StyleSheet, ThemeProvider, useTheme } = Sugar<Theme>(darkTheme);\r\nexport default StyleSheet;\r\n","import * as React from 'react';\r\nimport { View } from 'react-native';\r\nimport Animated, { useAnimatedStyle } from 'react-native-reanimated';\r\nimport { StyleSheet } from 'src/styles';\r\nimport { AnimationCompProps } from 'src/types';\r\n\r\nexport const Rotate = ({ x, backgroundColor }: AnimationCompProps) => {\r\n  const animatedStyles = useAnimatedStyle(() => {\r\n    return {\r\n      transform: [{ rotate: `${x.value * 30}deg` }],\r\n    };\r\n  });\r\n\r\n  return (\r\n    <View style={s.boxBorder}>\r\n      <Animated.View style={[s.box, { backgroundColor }, animatedStyles]} />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst s = StyleSheet.create((theme, constants) => ({\r\n  box: {\r\n    height: 180,\r\n    width: 180,\r\n    backgroundColor: theme.primary,\r\n    opacity: theme.opacity.fade,\r\n  },\r\n  boxBorder: {\r\n    borderWidth: 2,\r\n    borderColor: theme.border,\r\n  },\r\n}));\r\n","import * as React from 'react';\r\nimport { View } from 'react-native';\r\nimport Animated, { useAnimatedStyle } from 'react-native-reanimated';\r\nimport { StyleSheet } from 'src/styles';\r\nimport { AnimationCompProps } from 'src/types';\r\n\r\nexport const Movement = ({ x, backgroundColor }: AnimationCompProps) => {\r\n  const animatedStyles = useAnimatedStyle(() => {\r\n    return {\r\n      transform: [{ translateY: x.value * 100 }],\r\n    };\r\n  });\r\n\r\n  return (\r\n    <View style={s.boxBorder}>\r\n      <Animated.View style={[s.box, { backgroundColor }, animatedStyles]} />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst s = StyleSheet.create((theme, constants) => ({\r\n  box: {\r\n    height: [100, 150],\r\n    width: [120, 200],\r\n    backgroundColor: theme.primary,\r\n    opacity: theme.opacity.fade,\r\n    margin: -50,\r\n  },\r\n  boxBorder: {\r\n    height: [100, 150],\r\n    width: [120, 200],\r\n    borderWidth: 2,\r\n    borderColor: theme.border,\r\n    alignItems: 'center',\r\n  },\r\n}));\r\n","import * as React from 'react';\r\nimport { View } from 'react-native';\r\nimport Animated, { useAnimatedStyle } from 'react-native-reanimated';\r\nimport { StyleSheet } from 'src/styles';\r\nimport { AnimationCompProps } from 'src/types';\r\n\r\nexport const Scale = ({ x, backgroundColor }: AnimationCompProps) => {\r\n  const animatedStyles = useAnimatedStyle(() => {\r\n    return {\r\n      transform: [{ scale: x.value }],\r\n    };\r\n  });\r\n\r\n  return (\r\n    <View style={[s.circleBorder]}>\r\n      <Animated.View style={[s.circle, { backgroundColor }, animatedStyles]} />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst s = StyleSheet.create((theme, constants) => ({\r\n  circle: {\r\n    height: 180,\r\n    width: 180,\r\n    backgroundColor: theme.primary,\r\n    opacity: theme.opacity.fade,\r\n    borderRadius: 100,\r\n  },\r\n  circleBorder: {\r\n    borderWidth: 2,\r\n    borderColor: theme.border,\r\n    borderRadius: 100,\r\n  },\r\n}));\r\n","import * as React from 'react';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { SafeAreaView } from 'react-native';\r\nimport { HomeScreen } from 'src/screen/HomeScreen';\r\nimport { ThemeProvider } from 'src/styles';\r\n\r\nexport default function App() {\r\n  return (\r\n    <SafeAreaView style={{ flex: 1 }}>\r\n      <StatusBar hidden />\r\n      <ThemeProvider>\r\n        <HomeScreen />\r\n      </ThemeProvider>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport {\r\n  cancelAnimation,\r\n  runOnJS,\r\n  useSharedValue,\r\n  withSpring,\r\n} from 'react-native-reanimated';\r\nimport { InputSection } from 'src/components/InputSection';\r\nimport { Container } from 'src/components/ui';\r\nimport { OutputSection } from 'src/components/OutputSection';\r\nimport type { ActionTypes, InitStateType } from 'src/types';\r\nimport { ConfigType, DEFAULT_CONFIG } from 'src/constants';\r\nimport { useTheme } from 'src/styles';\r\n\r\nconst reducer = (state: ConfigType, action: ActionTypes) => {\r\n  switch (action.type) {\r\n    case 'SET':\r\n      return { ...state, ...action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const HomeScreen = () => {\r\n  const x = useSharedValue(0);\r\n  const [state, dispatch] = React.useReducer(reducer, DEFAULT_CONFIG);\r\n  const [animating, setAnimating] = React.useState(false);\r\n  useTheme();\r\n\r\n  const handleChange = (payload: Partial<InitStateType>) => {\r\n    dispatch({ type: 'SET', payload });\r\n  };\r\n\r\n  const animationCompleted = () => setAnimating(false);\r\n\r\n  const stopAnimation = () => {\r\n    cancelAnimation(x);\r\n    x.value = x.value >= 0.5 ? 1 : 0;\r\n    animationCompleted();\r\n  };\r\n\r\n  const onPress = () => {\r\n    setAnimating(true);\r\n    cancelAnimation(x);\r\n    x.value = withSpring(x.value === 0 ? 1 : 0, state, () =>\r\n      runOnJS(animationCompleted)()\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <InputSection\r\n          animating={animating}\r\n          onPress={onPress}\r\n          state={state}\r\n          handleChange={handleChange}\r\n          stopAnimation={stopAnimation}\r\n        />\r\n        <OutputSection x={x} stopAnimation={stopAnimation} />\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n","import * as React from 'react';\r\nimport { StyleSheet } from 'src/styles';\r\nimport Animated, {\r\n  useAnimatedRef,\r\n  useDerivedValue,\r\n} from 'react-native-reanimated';\r\nimport { TextInput } from 'react-native';\r\nimport { ReText } from 'react-native-redash';\r\n\r\nconst FIXED = 1000;\r\nAnimated.addWhitelistedNativeProps({ text: true });\r\nconst ReTextInput = Animated.createAnimatedComponent(TextInput);\r\n\r\ntype Props = { x: Animated.SharedValue<number> };\r\n\r\nconst WebText = ({ x }: Props) => {\r\n  const inputAnimatedRef = useAnimatedRef();\r\n\r\n  useDerivedValue(() => {\r\n    if (inputAnimatedRef && inputAnimatedRef.current) {\r\n      inputAnimatedRef.current.setNativeProps({\r\n        text: (Math.floor(x.value * FIXED) / FIXED).toString(),\r\n      });\r\n    }\r\n    return 0;\r\n  });\r\n\r\n  return (\r\n    <ReTextInput defaultValue=\"ad\" ref={inputAnimatedRef} style={s.text} />\r\n  );\r\n};\r\n\r\nconst NativeText = ({ x }) => {\r\n  const animatedText = useDerivedValue(() =>\r\n    (Math.floor(x.value * FIXED) / FIXED).toString()\r\n  );\r\n\r\n  return <ReText text={animatedText} style={s.text} />;\r\n};\r\n\r\nexport const AnimatedNumber = ({ x }: Props) => {\r\n  if (StyleSheet.constants.os.web) {\r\n    return <WebText x={x} />;\r\n  }\r\n\r\n  return <NativeText x={x} />;\r\n};\r\n\r\nconst s = StyleSheet.create((theme, constants) => ({\r\n  text: {\r\n    color: theme.text,\r\n  },\r\n}));\r\n","import * as React from 'react';\r\nimport RNSlider from '@react-native-community/slider';\r\nimport { View, Text } from 'react-native';\r\nimport { StyleSheet } from 'src/styles';\r\nimport { InitStateType } from 'src/types';\r\n\r\nexport const Slider = ({\r\n  value,\r\n  stateKey,\r\n  handleChange,\r\n  minimumValue = 0,\r\n  maximumValue = 100,\r\n  step = 1,\r\n}: {\r\n  value: number | undefined;\r\n  stateKey: keyof InitStateType;\r\n  minimumValue?: number;\r\n  maximumValue?: number;\r\n  step?: number;\r\n  handleChange: (a: Partial<InitStateType>) => void;\r\n}) => {\r\n  const [val, setVal] = React.useState(value);\r\n\r\n  const handleFinalValue = () => {\r\n    handleChange({ [stateKey]: val });\r\n  };\r\n\r\n  const handleValueChange = (e: number) => {\r\n    const newVal = Math.floor(e * 100) / 100;\r\n    setVal(newVal);\r\n  };\r\n\r\n  return (\r\n    <View style={s.container}>\r\n      <View style={s.textContainer}>\r\n        <Text style={s.label}>{stateKey}:</Text>\r\n        <Text style={s.value}>{val}</Text>\r\n      </View>\r\n      <RNSlider\r\n        minimumValue={minimumValue}\r\n        maximumValue={maximumValue}\r\n        step={step}\r\n        value={value}\r\n        onValueChange={handleValueChange}\r\n        onSlidingComplete={handleFinalValue}\r\n        minimumTrackTintColor={StyleSheet.theme.slider}\r\n        maximumTrackTintColor=\"#808080\"\r\n        thumbTintColor={StyleSheet.theme.slider}\r\n        style={s.slider}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst s = StyleSheet.create((theme) => ({\r\n  container: {\r\n    marginVertical: 5,\r\n    width: 300,\r\n  },\r\n  slider: {\r\n    width: '100%',\r\n    height: 30,\r\n  },\r\n  textContainer: {\r\n    flexDirection: 'row',\r\n  },\r\n  label: {\r\n    color: theme.text,\r\n  },\r\n  value: {\r\n    marginLeft: 6,\r\n    fontWeight: 'bold',\r\n    color: theme.text,\r\n  },\r\n}));\r\n","import * as React from 'react';\r\nimport { View, Text, TouchableOpacity, Linking } from 'react-native';\r\nimport { StyleSheet } from 'src/styles';\r\n\r\nconst ASSETS = [{ title: 'FlatIcon', url: 'https://www.flaticon.com/' }];\r\n\r\nconst TECH = [\r\n  { title: 'React Native', url: 'https://reactnative.dev/' },\r\n  { title: 'Expo', url: 'https://expo.io/' },\r\n  {\r\n    title: 'React Native Reanimated',\r\n    url: 'https://docs.swmansion.com/react-native-reanimated/',\r\n  },\r\n  {\r\n    title: 'React Native Web',\r\n    url: 'https://necolas.github.io/react-native-web/',\r\n  },\r\n  {\r\n    title: 'React Native Redash',\r\n    url: 'https://github.com/wcandillon/react-native-redash',\r\n  },\r\n  {\r\n    title: '@react-native-community/slider',\r\n    url: 'https://github.com/callstack/react-native-slider',\r\n  },\r\n  {\r\n    title: '@react-native-picker/picker',\r\n    url: 'https://www.npmjs.com/package/@react-native-community/picker',\r\n  },\r\n  {\r\n    title: 'React Native Svg',\r\n    url: 'react-native-svg',\r\n  },\r\n  {\r\n    title: 'React Native Sugar Style',\r\n    url: 'https://github.com/mohit23x/react-native-sugar-style',\r\n  },\r\n];\r\n\r\nconst Link = ({ title, url }: { title: string; url: string }) => {\r\n  const onPress = () => {\r\n    Linking.canOpenURL(url).then(() => {\r\n      return Linking.openURL(url);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <TouchableOpacity\r\n      style={{\r\n        padding: 5,\r\n      }}\r\n      onPress={onPress}\r\n    >\r\n      <Text style={s.label}>{title}</Text>\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\nexport const Attribution = () => {\r\n  return (\r\n    <View\r\n      style={{\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginVertical: 10,\r\n      }}\r\n    >\r\n      <Text style={s.label}>The assets were taken from</Text>\r\n      {ASSETS.map((d) => (\r\n        <Link key={d.url} {...d} />\r\n      ))}\r\n      <Text style={s.title}>Made with some amazing technologies</Text>\r\n\r\n      {TECH.map((d) => (\r\n        <Link key={d.title} title={d.title} url={d.url} />\r\n      ))}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst s = StyleSheet.create((theme) => ({\r\n  title: {\r\n    color: theme.text,\r\n    fontWeight: 'bold',\r\n    fontSize: theme.font.m,\r\n    textAlign: 'center',\r\n    marginVertical: 5,\r\n  },\r\n  label: {\r\n    color: theme.text,\r\n  },\r\n}));\r\n","import * as React from 'react';\r\nimport { View, Switch, Text, TouchableOpacity } from 'react-native';\r\nimport { ConfigType, LimitType } from 'src/constants';\r\nimport { StyleSheet } from 'src/styles';\r\nimport { Button } from './ui';\r\n\r\nexport const ConfigureLimit = ({\r\n  limit,\r\n  setConfig,\r\n  handleSave,\r\n  handleReset,\r\n}: {\r\n  limit: LimitType;\r\n  setConfig: (a: any) => void;\r\n  handleSave: () => void;\r\n  handleReset: () => void;\r\n}) => {\r\n  return (\r\n    <View>\r\n      <InputCounter\r\n        value={limit.damping}\r\n        field={'damping'}\r\n        setConfig={setConfig}\r\n      />\r\n      <InputCounter value={limit.mass} field={'mass'} setConfig={setConfig} />\r\n      <InputCounter\r\n        value={limit.stiffness}\r\n        field={'stiffness'}\r\n        setConfig={setConfig}\r\n      />\r\n      <InputCounter\r\n        value={limit.velocity}\r\n        field={'velocity'}\r\n        setConfig={setConfig}\r\n      />\r\n\r\n      <View style={s.btnContainer}>\r\n        <Button title={'RESET'} onPress={handleReset} />\r\n        <Button title={'SAVE'} onPress={handleSave} />\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst InputCounter = ({\r\n  field,\r\n  setConfig,\r\n  value,\r\n}: {\r\n  field: keyof LimitType;\r\n  setConfig: (a: any) => void;\r\n  value: number;\r\n}) => {\r\n  const increase = () => {\r\n    setConfig({ [field]: value + 2 });\r\n  };\r\n  const decrease = () => setConfig({ [field]: value - 2 });\r\n\r\n  return (\r\n    <View style={s.counterContainer}>\r\n      <View style={{ flex: 1 }}>\r\n        <Text style={s.label}>{field}</Text>\r\n      </View>\r\n      <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n        <TouchableOpacity style={s.counterBtn} onPress={decrease}>\r\n          <Text style={s.btnText}>-</Text>\r\n        </TouchableOpacity>\r\n        <Text style={s.counterValue}>{value}</Text>\r\n        <TouchableOpacity style={s.counterBtn} onPress={increase}>\r\n          <Text style={s.btnText}>+</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst s = StyleSheet.create((theme) => ({\r\n  label: {\r\n    color: theme.text,\r\n  },\r\n  counterContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginVertical: 5,\r\n  },\r\n  counterBtn: {\r\n    height: 50,\r\n    width: 50,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: theme.surface,\r\n    marginHorizontal: 10,\r\n  },\r\n  btnText: {\r\n    fontWeight: 'bold',\r\n    fontSize: theme.font.m,\r\n    color: theme.text,\r\n  },\r\n  counterValue: {\r\n    color: theme.text,\r\n    minWidth: 50,\r\n    textAlign: 'center',\r\n  },\r\n  btnContainer: {\r\n    justifyContent: ['space-evenly', 'flex-end'],\r\n    flexDirection: 'row',\r\n    marginVertical: 10,\r\n  },\r\n}));\r\n","import * as React from 'react';\r\nimport { View, Image, Modal, Switch, Text, ScrollView } from 'react-native';\r\nimport { ConfigType, LimitType } from 'src/constants';\r\nimport { darkTheme, lightTheme, StyleSheet } from 'src/styles';\r\nimport { Attribution } from './Attribution';\r\nimport { ConfigureLimit } from './ConfigureLimit';\r\nimport { Button, Divider } from './ui';\r\n\r\nconst DarkModeSetting = () => {\r\n  const isLight = StyleSheet.theme.name === 'light';\r\n\r\n  const toggleSwitch = () => {\r\n    StyleSheet.build(isLight ? darkTheme : lightTheme);\r\n  };\r\n\r\n  return (\r\n    <View style={s.darkModeContainer}>\r\n      <Text style={{ color: StyleSheet.theme.text }}>Light Mode</Text>\r\n      <Switch\r\n        thumbColor={StyleSheet.theme.icon}\r\n        onValueChange={toggleSwitch}\r\n        value={isLight}\r\n        style={{ marginRight: 10 }}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport const SettingModal = ({\r\n  toggleModal,\r\n  show,\r\n  limit,\r\n  setConfig,\r\n  handleReset,\r\n  handleSave,\r\n}: {\r\n  show: boolean;\r\n  limit: LimitType;\r\n  toggleModal: () => void;\r\n  handleReset: () => void;\r\n  handleSave: () => void;\r\n  setConfig: (obj: Partial<ConfigType>) => void;\r\n}) => {\r\n  return (\r\n    <Modal animationType=\"slide\" onRequestClose={toggleModal} visible={show}>\r\n      <ScrollView style={s.container}>\r\n        <Image\r\n          source={{ uri: 'https://reactnative.dev/img/header_logo.svg' }}\r\n          style={s.image}\r\n        />\r\n        <DarkModeSetting />\r\n        <ConfigureLimit\r\n          limit={limit}\r\n          setConfig={setConfig}\r\n          handleSave={handleSave}\r\n          handleReset={handleReset}\r\n        />\r\n        <Divider />\r\n        <Attribution />\r\n        <Button onPress={toggleModal} title={'CLOSE'} />\r\n      </ScrollView>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst s = StyleSheet.create((theme) => ({\r\n  container: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.background,\r\n    paddingHorizontal: 10,\r\n  },\r\n  darkModeContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    marginVertical: 12,\r\n  },\r\n  label: {\r\n    color: theme.text,\r\n  },\r\n  input: {\r\n    color: theme.text,\r\n  },\r\n  image: {\r\n    height: 100,\r\n    width: 100,\r\n    resizeMode: 'contain',\r\n    marginVertical: 20,\r\n    alignSelf: 'center',\r\n  },\r\n}));\r\n","import * as React from 'react';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { Section } from './ui';\r\nimport { Actions } from './Actions';\r\nimport { Slider } from './Slider';\r\nimport { SettingModal } from './SettingModal';\r\nimport { StyleSheet } from 'src/styles';\r\nimport { ActionTypes, InitStateType } from 'src/types';\r\nimport { ConfigType, DEFAULT_MAX_LIMIT, LimitType, STEP } from 'src/constants';\r\n\r\nconst persistConfig = (payload: ConfigType) => {\r\n  AsyncStorage.setItem('config', JSON.stringify(payload));\r\n};\r\n\r\nconst reducer = (state: LimitType = DEFAULT_MAX_LIMIT, action: ActionTypes) => {\r\n  switch (action.type) {\r\n    case 'SET':\r\n      return { ...state, ...action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const InputSection = ({\r\n  onPress,\r\n  state,\r\n  handleChange,\r\n  animating,\r\n  stopAnimation,\r\n}: {\r\n  onPress: () => void;\r\n  state: ConfigType;\r\n  animating: boolean;\r\n  stopAnimation: () => void;\r\n  handleChange: (a: Partial<InitStateType>) => void;\r\n}) => {\r\n  const [show, setShow] = React.useState(false);\r\n  const [LIMIT, dispatch] = React.useReducer(reducer, DEFAULT_MAX_LIMIT);\r\n\r\n  const toggleModal = () => setShow((c) => !c);\r\n\r\n  const getConfig = async () => {\r\n    const data = await AsyncStorage.getItem('config');\r\n    if (data) {\r\n      dispatch({ type: 'SET', payload: JSON.parse(data) });\r\n    } else {\r\n      dispatch({ type: 'SET', payload: DEFAULT_MAX_LIMIT });\r\n    }\r\n  };\r\n\r\n  const handleSave = () => {\r\n    persistConfig(LIMIT);\r\n    alert('saved');\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setConfig(DEFAULT_MAX_LIMIT);\r\n    persistConfig(DEFAULT_MAX_LIMIT);\r\n    alert('done');\r\n  };\r\n\r\n  const setConfig = (obj: Partial<ConfigType>) => {\r\n    const payload = Object.assign({}, LIMIT, obj);\r\n    dispatch({ type: 'SET', payload });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    getConfig();\r\n  }, []);\r\n\r\n  return (\r\n    <Section style={s.section}>\r\n      {/* <Select title={'Preset'} /> */}\r\n\r\n      <Slider\r\n        stateKey={'damping'}\r\n        value={state.damping}\r\n        handleChange={handleChange}\r\n        maximumValue={LIMIT.damping}\r\n        step={STEP.damping}\r\n      />\r\n      <Slider\r\n        stateKey={'mass'}\r\n        value={state.mass}\r\n        handleChange={handleChange}\r\n        maximumValue={LIMIT.mass}\r\n        step={STEP.mass}\r\n      />\r\n      <Slider\r\n        stateKey={'stiffness'}\r\n        value={state.stiffness}\r\n        handleChange={handleChange}\r\n        maximumValue={LIMIT.stiffness}\r\n        step={STEP.stiffness}\r\n      />\r\n      <Slider\r\n        stateKey={'velocity'}\r\n        value={state.velocity}\r\n        handleChange={handleChange}\r\n        maximumValue={LIMIT.velocity}\r\n        step={STEP.velocity}\r\n      />\r\n\r\n      <Actions\r\n        animating={animating}\r\n        onPress={onPress}\r\n        stopAnimation={stopAnimation}\r\n        handleSetting={toggleModal}\r\n      />\r\n      <SettingModal\r\n        toggleModal={toggleModal}\r\n        show={show}\r\n        limit={LIMIT}\r\n        setConfig={setConfig}\r\n        handleSave={handleSave}\r\n        handleReset={handleReset}\r\n      />\r\n    </Section>\r\n  );\r\n};\r\n\r\nconst s = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  section: {\r\n    alignItems: 'center',\r\n    justifyContent: 'space-evenly',\r\n  },\r\n});\r\n","import * as React from 'react';\r\nimport { View, Text, ScrollView, TouchableOpacity } from 'react-native';\r\nimport { ExampleKeyType } from 'src/constants';\r\nimport { StyleSheet } from 'src/styles';\r\n\r\nexport const Option = ({\r\n  option,\r\n  toggleAnimation,\r\n  active,\r\n}: {\r\n  option: any;\r\n  active: ExampleKeyType;\r\n  toggleAnimation: (name: ExampleKeyType) => void;\r\n}) => {\r\n  const Icon = option.icon;\r\n\r\n  const activeColor =\r\n    active === option.key ? option.color : StyleSheet.theme.icon;\r\n\r\n  return (\r\n    <TouchableOpacity onPress={() => toggleAnimation(option.key)}>\r\n      <View style={s.outputOption}>\r\n        <Icon fill={activeColor} style={{ transform: [{ scale: 0.7 }] }} />\r\n        <Text style={[s.outputText, { color: activeColor }]}>\r\n          {option.title}\r\n        </Text>\r\n      </View>\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\nexport const AnimationOptions = ({\r\n  options,\r\n  toggleAnimation,\r\n  active,\r\n}: {\r\n  options: any;\r\n  toggleAnimation: (name: ExampleKeyType) => void;\r\n  active: ExampleKeyType;\r\n}) => {\r\n  return (\r\n    <View style={s.container}>\r\n      <ScrollView\r\n        contentContainerStyle={s.scroll}\r\n        horizontal={StyleSheet.constants.width > 480 ? true : false}\r\n      >\r\n        {options.map((option) => (\r\n          <Option\r\n            key={option.title}\r\n            option={option}\r\n            toggleAnimation={toggleAnimation}\r\n            active={active}\r\n          />\r\n        ))}\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst s = StyleSheet.create((theme, constants) => ({\r\n  container: {\r\n    maxWidth: [60, undefined, undefined],\r\n    maxHeight: [undefined, 70],\r\n    marginHorizontal: 8,\r\n    marginVertical: [0, 10],\r\n  },\r\n  scroll: {\r\n    backgroundColor: theme.surface,\r\n    flexGrow: 1,\r\n    justifyContent: 'space-evenly',\r\n    paddingHorizontal: 2,\r\n    borderRadius: 18,\r\n  },\r\n  outputOption: {\r\n    height: [60, 70],\r\n    width: [60, 100],\r\n    marginHorizontal: [0, 10],\r\n    marginVertical: [8, 0],\r\n    alignItems: 'center',\r\n  },\r\n  outputText: {\r\n    fontSize: 12,\r\n    marginBottom: 5,\r\n    fontWeight: 'bold',\r\n  },\r\n}));\r\n","import * as React from 'react';\r\nimport { View, Text } from 'react-native';\r\nimport { Section } from './ui';\r\nimport { StyleSheet } from 'src/styles';\r\nimport { AnimatedNumber } from 'src/components/AnimatedNumber';\r\nimport { AnimationOptions } from './AnimationOptions';\r\nimport Animated from 'react-native-reanimated';\r\nimport { ExampleKeyType, examples } from 'src/constants';\r\n\r\nexport const renderComponent = (key: ExampleKeyType) => {\r\n  return examples[key].component;\r\n};\r\n\r\nexport const options = Object.keys(examples).map((d) => {\r\n  const item = examples[d];\r\n  return { title: item.title, icon: item.icon, key: d, color: item.color };\r\n});\r\n\r\nexport const OutputSection = ({\r\n  x,\r\n  stopAnimation,\r\n}: {\r\n  x: Animated.SharedValue<number>;\r\n  stopAnimation: () => void;\r\n}) => {\r\n  const [active, setActive] = React.useState<ExampleKeyType>('rotate');\r\n\r\n  const toggleAnimation = (name: ExampleKeyType) => {\r\n    stopAnimation();\r\n    setActive(name);\r\n  };\r\n\r\n  const AnimationComp = renderComponent(active);\r\n\r\n  return (\r\n    <Section>\r\n      <View style={s.head}>\r\n        <Text style={s.title}>{examples[active].title}</Text>\r\n        <AnimatedNumber x={x} />\r\n      </View>\r\n      <View style={s.container}>\r\n        <View style={s.playground}>\r\n          <AnimationComp x={x} backgroundColor={examples[active].color} />\r\n        </View>\r\n        <AnimationOptions\r\n          active={active}\r\n          options={options}\r\n          toggleAnimation={toggleAnimation}\r\n        />\r\n      </View>\r\n    </Section>\r\n  );\r\n};\r\n\r\nconst s = StyleSheet.create((theme) => ({\r\n  container: {\r\n    flexDirection: ['row', 'column'],\r\n    flex: 1,\r\n  },\r\n  head: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    marginHorizontal: 10,\r\n  },\r\n  title: {\r\n    fontSize: theme.font.l,\r\n    color: theme.text,\r\n  },\r\n  playground: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  box: {\r\n    height: 180,\r\n    width: 180,\r\n    backgroundColor: theme.primary,\r\n    opacity: theme.opacity.fade,\r\n  },\r\n  boxBorder: {\r\n    borderWidth: 2,\r\n    borderColor: theme.border,\r\n  },\r\n}));\r\n","import * as React from 'react';\r\nimport Svg, { Path } from 'react-native-svg';\r\n\r\nfunction SvgComponent(props) {\r\n  return (\r\n    <Svg\r\n      x=\"0px\"\r\n      y=\"0px\"\r\n      viewBox=\"0 0 508.8 508.8\"\r\n      xmlSpace=\"preserve\"\r\n      enableBackground=\"new 0 0 508.8 508.8\"\r\n      {...props}\r\n    >\r\n      <Path d=\"M258.448 96L211.52 60.8 258.448 25.6 239.248 0 158.176 60.8 239.248 121.6z\" />\r\n      <Path d=\"M331.232 468.144l9.344 30.592a232.201 232.201 0 0032-12.432l-13.76-28.8a201.491 201.491 0 01-27.584 10.64zM272.848 476.8v32c11.448-.005 22.88-.84 34.208-2.496L302.4 474.64a202.69 202.69 0 01-29.552 2.16zM465.368 147.256C422.247 83.191 350.074 44.781 272.848 44.8v32c110.457-.018 200.014 89.511 200.032 199.968.011 66.58-33.112 128.8-88.352 165.968l17.92 26.528c106.295-71.545 134.465-215.713 62.92-322.008z\" />\r\n      <Path d=\"M123.728 131.024L3.872 413.376l210.096 89.2 119.856-282.352-210.096-89.2zm73.296 329.6l-151.2-64.16 94.848-223.472 151.2 64.16-94.848 223.472z\" />\r\n    </Svg>\r\n  );\r\n}\r\n\r\nexport default SvgComponent;\r\n","import * as React from 'react';\r\nimport Svg, { Path } from 'react-native-svg';\r\n\r\nfunction SvgComponent(props) {\r\n  return (\r\n    <Svg viewBox=\"0 0 551.13 551.13\" {...props}>\r\n      <Path d=\"M465.016 172.228h-51.668v34.446h34.446v310.011H103.337V206.674h34.446v-34.446H86.114c-9.52 0-17.223 7.703-17.223 17.223v344.456c0 9.52 7.703 17.223 17.223 17.223h378.902c9.52 0 17.223-7.703 17.223-17.223V189.451c0-9.52-7.703-17.223-17.223-17.223z\" />\r\n      <Path d=\"M258.342 65.931v244.08h34.446V65.931l73.937 73.937 24.354-24.354L275.565 0 160.051 115.514l24.354 24.354z\" />\r\n    </Svg>\r\n  );\r\n}\r\n\r\nexport default SvgComponent;\r\n","import * as React from 'react';\r\nimport Svg, { Path } from 'react-native-svg';\r\n\r\nfunction SvgComponent(props) {\r\n  return (\r\n    <Svg\r\n      x=\"0px\"\r\n      y=\"0px\"\r\n      viewBox=\"0 0 512.568 512.568\"\r\n      xmlSpace=\"preserve\"\r\n      enableBackground=\"new 0 0 512.568 512.568\"\r\n      {...props}\r\n    >\r\n      <Path d=\"M255.284 325.284c-38.598 0-70-31.402-70-70s31.402-70 70-70 70 31.402 70 70-31.402 70-70 70zm0-100c-16.542 0-30 13.458-30 30s13.458 30 30 30 30-13.458 30-30-13.458-30-30-30zM133.426 333.142l-76.858-76.858 76.858-76.858-28.284-28.284L0 256.284l105.142 105.142 28.284-28.284zm228 74.284l-28.284-28.284L256.284 456l-73.858-73.858-28.284 28.284 102.142 102.142 105.142-105.142zm151.142-151.142L410.426 154.142l-28.284 28.284L456 256.284l-74.858 74.858 28.284 28.284 103.142-103.142zM361.426 105.142L256.284 0 153.142 103.142l28.284 28.284 74.858-74.858 76.858 76.858 28.284-28.284z\" />\r\n    </Svg>\r\n  );\r\n}\r\n\r\nexport default SvgComponent;\r\n","import { Movement, Rotate, Scale } from 'src/components';\r\nimport RotateIcon from 'src/assets/Rotate';\r\nimport MoveIcon from 'src/assets/Move';\r\nimport ScaleIcon from 'src/assets/Scale';\r\n\r\n// ============= config =============\r\n\r\nexport const DEFAULT_CONFIG = {\r\n  damping: 10,\r\n  mass: 1,\r\n  stiffness: 100,\r\n  velocity: 1,\r\n};\r\n\r\nexport const DEFAULT_MAX_LIMIT = {\r\n  damping: 14,\r\n  mass: 5,\r\n  stiffness: 300,\r\n  velocity: 100,\r\n};\r\n\r\nexport const STEP = {\r\n  damping: 0.5,\r\n  mass: 0.1,\r\n  stiffness: 1,\r\n  velocity: 1,\r\n};\r\n\r\nexport type ConfigType = typeof DEFAULT_CONFIG;\r\nexport type LimitType = typeof DEFAULT_MAX_LIMIT;\r\n\r\n// ========== output examples =============\r\n\r\nexport const examples = {\r\n  rotate: {\r\n    title: 'Rotate',\r\n    component: Rotate,\r\n    icon: RotateIcon,\r\n    color: '#eb4d4b',\r\n  },\r\n  scale: {\r\n    title: 'Scale',\r\n    component: Scale,\r\n    icon: ScaleIcon,\r\n    color: '#10ac84',\r\n  },\r\n  movement: {\r\n    title: 'Move',\r\n    component: Movement,\r\n    icon: MoveIcon,\r\n    color: '#f368e0',\r\n  },\r\n};\r\n\r\nexport type ExampleKeyType = keyof typeof examples;\r\n","import * as React from 'react';\r\nimport {\r\n  TouchableOpacity,\r\n  View,\r\n  ViewStyle,\r\n  Text,\r\n  ButtonProps,\r\n} from 'react-native';\r\nimport { StyleSheet } from 'src/styles';\r\n\r\ntype Props = {\r\n  style?: ViewStyle;\r\n  children?: React.ReactNode | React.ReactNode[];\r\n};\r\n\r\nexport const Container = ({ style, ...props }: Props) => {\r\n  return <View style={[s.container, style]} {...props} />;\r\n};\r\n\r\nexport const Section = ({ style, ...props }: Props) => {\r\n  return <View style={[s.section, style]} {...props} />;\r\n};\r\n\r\nexport const Divider = () => {\r\n  return <View style={s.divider} />;\r\n};\r\n\r\nexport const Button = ({\r\n  onPress,\r\n  style,\r\n  title,\r\n}: {\r\n  onPress: () => any;\r\n  style?: ViewStyle;\r\n  title: string;\r\n}) => {\r\n  return (\r\n    <TouchableOpacity style={[s.btn, style]} onPress={onPress}>\r\n      <Text>{title}</Text>\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\nconst s = StyleSheet.create((theme, constants) => ({\r\n  container: {\r\n    flex: 1,\r\n    flexDirection: ['column-reverse', 'row'],\r\n    backgroundColor: theme.background,\r\n    paddingHorizontal: [undefined, undefined, 100],\r\n  },\r\n  section: {\r\n    flex: 1,\r\n    maxHeight: [constants.height / 2, constants.height],\r\n    marginVertical: [undefined, undefined, '5%'],\r\n  },\r\n  divider: {\r\n    height: 1,\r\n    width: '100%',\r\n    backgroundColor: theme.border,\r\n  },\r\n  btn: {\r\n    minHeight: 50,\r\n    flex: 1,\r\n    maxWidth: 200,\r\n    minWidth: 100,\r\n    borderRadius: 10,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: theme.secondary,\r\n    marginHorizontal: 10,\r\n    alignSelf: 'center',\r\n    marginVertical: 5,\r\n  },\r\n}));\r\n"],"sourceRoot":""}
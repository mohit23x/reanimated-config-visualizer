{"version":3,"sources":["src/styles/index.tsx","App.tsx","src/screen/HomeScreen.tsx","src/components/AnimatedNumber.tsx","src/components/Rotate.tsx","src/components/Scale.tsx","src/components/Movement.tsx","src/components/PlayButton.tsx","src/assets/Setting.tsx","src/components/Actions.tsx","src/components/Slider.tsx","src/components/Attribution.tsx","src/components/ConfigureLimit.tsx","src/components/SettingModal.tsx","src/components/InputSection.tsx","src/components/AnimationOptions.tsx","src/assets/Rotate.tsx","src/assets/Move.tsx","src/assets/Scale.tsx","src/components/OutputSection.tsx","src/components/ui.tsx","src/constants/index.tsx"],"names":["commonTheme","font","s","m","l","opacity","fade","half","white","lightTheme","name","background","surface","text","primary","secondary","border","slider","icon","darkTheme","Sugar","StyleSheet","ThemeProvider","useTheme","App","style","flex","hidden","initState","DEFAULT_CONFIG","reducer","state","action","type","payload","HomeScreen","x","useSharedValue","React","dispatch","animating","setAnimating","animationCompleted","stopAnimation","cancelAnimation","value","onPress","console","log","withSpring","runOnJS","handleChange","Animated","addWhitelistedNativeProps","ReTextInput","createAnimatedComponent","TextInput","WebText","inputAnimatedRef","useAnimatedRef","useDerivedValue","current","setNativeProps","Math","floor","toString","defaultValue","ref","NativeText","animatedText","AnimatedNumber","constants","os","web","create","theme","color","Rotate","backgroundColor","animatedStyles","useAnimatedStyle","transform","rotate","boxBorder","View","box","height","width","borderWidth","borderColor","Scale","scale","circleBorder","circle","borderRadius","Movement","translateY","margin","alignItems","PlayButton","flexDirection","TouchableOpacity","activeOpacity","container","Text","minWidth","justifyContent","marginBottom","marginHorizontal","fontWeight","letterSpacing","SvgComponent","props","y","viewBox","xmlSpace","enableBackground","d","Actions","handleSetting","paddingHorizontal","marginRight","Setting","fill","title","Slider","stateKey","minimumValue","maximumValue","step","val","setVal","textContainer","label","onValueChange","e","newVal","onSlidingComplete","minimumTrackTintColor","maximumTrackTintColor","thumbTintColor","marginVertical","marginLeft","ASSETS","url","TECH","Link","padding","Linking","canOpenURL","then","openURL","Attribution","map","key","fontSize","textAlign","ConfigureLimit","limit","setConfig","handleSave","handleReset","damping","field","mass","stiffness","velocity","btnContainer","InputCounter","counterContainer","counterBtn","btnText","counterValue","DarkModeSetting","isLight","toggleSwitch","darkModeContainer","Switch","thumbColor","ios_backgroundColor","SettingModal","toggleModal","show","setIsLight","Modal","animationType","onRequestClose","visible","ScrollView","Image","source","uri","resizeMode","alignSelf","build","flexGrow","input","persistConfig","AsyncStorage","setItem","JSON","stringify","DEFAULT_MAX_LIMIT","InputSection","setShow","LIMIT","c","obj","Object","assign","a","async","getItem","data","parse","getConfig","section","STEP","Option","option","toggleAnimation","active","Icon","activeColor","outputOption","outputText","AnimationOptions","options","contentContainerStyle","scroll","horizontal","maxWidth","undefined","maxHeight","examples","component","RotateIcon","ScaleIcon","movement","MoveIcon","keys","item","OutputSection","setActive","AnimationComp","head","playground","Container","Section","Divider","divider","Button","btn","minHeight"],"mappings":"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","file":"static/js/app.e7690488.chunk.js","sourcesContent":["import Sugar from 'react-native-sugar-style';\r\n\r\nconst commonTheme = {\r\n  font: {\r\n    s: 10,\r\n    m: 18,\r\n    l: 24,\r\n  },\r\n  opacity: {\r\n    fade: 0.7,\r\n    half: 0.4,\r\n  },\r\n  white: '#fbfbfb',\r\n};\r\n\r\nexport const lightTheme = {\r\n  ...commonTheme,\r\n  name: 'light',\r\n  background: '#f5f5f5',\r\n  surface: '#e9e9e9',\r\n  text: '#2b2b2b',\r\n  primary: '#feca57',\r\n  secondary: '#ff9ff3',\r\n  border: '#A1A9B1',\r\n  slider: '#222f3e',\r\n  icon: '#222f3e',\r\n};\r\n\r\nexport const darkTheme = {\r\n  ...commonTheme,\r\n  name: 'dark',\r\n  background: '#2b2b2b',\r\n  surface: '#111',\r\n  secondary: '#ff9ff3',\r\n  text: '#f5f5f5',\r\n  primary: '#feca57',\r\n  border: '#A1A9B1',\r\n  slider: '#888',\r\n  icon: '#ccc',\r\n};\r\n\r\nexport type Theme = typeof darkTheme;\r\nexport const { StyleSheet, ThemeProvider, useTheme } = Sugar<Theme>(darkTheme);\r\nexport default StyleSheet;\r\n","import { StatusBar } from 'expo-status-bar';\r\nimport React from 'react';\r\nimport { SafeAreaView, Text, View } from 'react-native';\r\nimport { HomeScreen } from 'src/screen/HomeScreen';\r\nimport { ThemeProvider } from 'src/styles';\r\n\r\nexport default function App() {\r\n  return (\r\n    <SafeAreaView style={{ flex: 1 }}>\r\n      <StatusBar hidden />\r\n      <ThemeProvider>\r\n        <HomeScreen />\r\n      </ThemeProvider>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport {\r\n  cancelAnimation,\r\n  runOnJS,\r\n  useSharedValue,\r\n  withSpring,\r\n} from 'react-native-reanimated';\r\nimport { InputSection } from 'src/components/InputSection';\r\nimport { Container, Divider } from 'src/components/ui';\r\nimport { OutputSection } from 'src/components/OutputSection';\r\nimport type { ActionTypes, InitStateType } from 'src/types';\r\nimport { ConfigType, DEFAULT_CONFIG } from 'src/constants';\r\nimport { useTheme } from 'src/styles';\r\n\r\nexport const initState = DEFAULT_CONFIG;\r\n\r\nconst reducer = (state: ConfigType, action: ActionTypes) => {\r\n  switch (action.type) {\r\n    case 'SET':\r\n      return { ...state, ...action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const HomeScreen = () => {\r\n  const x = useSharedValue(0);\r\n  const [state, dispatch] = React.useReducer(reducer, initState);\r\n  const [animating, setAnimating] = React.useState(false);\r\n  useTheme();\r\n\r\n  const handleChange = (payload: Partial<InitStateType>) => {\r\n    dispatch({ type: 'SET', payload });\r\n  };\r\n\r\n  const animationCompleted = () => setAnimating(false);\r\n\r\n  const stopAnimation = () => {\r\n    cancelAnimation(x);\r\n    x.value = x.value >= 0.5 ? 1 : 0;\r\n    animationCompleted();\r\n  };\r\n\r\n  const onPress = () => {\r\n    setAnimating(true);\r\n    cancelAnimation(x);\r\n    console.log(x.value);\r\n    x.value = withSpring(x.value === 0 ? 1 : 0, state, () =>\r\n      runOnJS(animationCompleted)()\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <InputSection\r\n          animating={animating}\r\n          onPress={onPress}\r\n          state={state}\r\n          handleChange={handleChange}\r\n          stopAnimation={stopAnimation}\r\n        />\r\n        <OutputSection x={x} stopAnimation={stopAnimation} />\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n","import * as React from 'react';\r\nimport { StyleSheet } from 'src/styles';\r\nimport Animated, {\r\n  useAnimatedRef,\r\n  useDerivedValue,\r\n} from 'react-native-reanimated';\r\nimport { TextInput } from 'react-native';\r\nimport { ReText } from 'react-native-redash';\r\n\r\nconst FIXED = 1000;\r\nAnimated.addWhitelistedNativeProps({ text: true });\r\nconst ReTextInput = Animated.createAnimatedComponent(TextInput);\r\n\r\ntype Props = { x: Animated.SharedValue<number> };\r\n\r\nconst WebText = ({ x }: Props) => {\r\n  const inputAnimatedRef = useAnimatedRef();\r\n\r\n  useDerivedValue(() => {\r\n    if (inputAnimatedRef && inputAnimatedRef.current) {\r\n      inputAnimatedRef.current.setNativeProps({\r\n        text: (Math.floor(x.value * FIXED) / FIXED).toString(),\r\n      });\r\n    }\r\n    return 0;\r\n  });\r\n\r\n  return (\r\n    <ReTextInput defaultValue=\"ad\" ref={inputAnimatedRef} style={s.text} />\r\n  );\r\n};\r\n\r\nconst NativeText = ({ x }) => {\r\n  const animatedText = useDerivedValue(() =>\r\n    (Math.floor(x.value * FIXED) / FIXED).toString()\r\n  );\r\n\r\n  return <ReText text={animatedText} style={s.text} />;\r\n};\r\n\r\nexport const AnimatedNumber = ({ x }: Props) => {\r\n  if (StyleSheet.constants.os.web) {\r\n    return <WebText x={x} />;\r\n  }\r\n\r\n  return <NativeText x={x} />;\r\n};\r\n\r\nconst s = StyleSheet.create((theme, constants) => ({\r\n  text: {\r\n    color: theme.text,\r\n  },\r\n}));\r\n","import * as React from 'react';\r\nimport { View } from 'react-native';\r\nimport Animated, { useAnimatedStyle } from 'react-native-reanimated';\r\nimport { StyleSheet } from 'src/styles';\r\nimport { AnimationCompProps } from 'src/types';\r\n\r\nexport const Rotate = ({ x, backgroundColor }: AnimationCompProps) => {\r\n  const animatedStyles = useAnimatedStyle(() => {\r\n    return {\r\n      transform: [{ rotate: `${x.value * 30}deg` }],\r\n    };\r\n  });\r\n\r\n  return (\r\n    <View style={s.boxBorder}>\r\n      <Animated.View style={[s.box, { backgroundColor }, animatedStyles]} />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst s = StyleSheet.create((theme, constants) => ({\r\n  box: {\r\n    height: 180,\r\n    width: 180,\r\n    backgroundColor: theme.primary,\r\n    opacity: theme.opacity.fade,\r\n  },\r\n  boxBorder: {\r\n    borderWidth: 2,\r\n    borderColor: theme.border,\r\n  },\r\n}));\r\n","import * as React from 'react';\r\nimport { View } from 'react-native';\r\nimport Animated, { useAnimatedStyle } from 'react-native-reanimated';\r\nimport { StyleSheet } from 'src/styles';\r\nimport { AnimationCompProps } from 'src/types';\r\n\r\nexport const Scale = ({ x, backgroundColor }: AnimationCompProps) => {\r\n  const animatedStyles = useAnimatedStyle(() => {\r\n    return {\r\n      transform: [{ scale: x.value }],\r\n    };\r\n  });\r\n\r\n  return (\r\n    <View style={[s.circleBorder]}>\r\n      <Animated.View style={[s.circle, { backgroundColor }, animatedStyles]} />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst s = StyleSheet.create((theme, constants) => ({\r\n  circle: {\r\n    height: 180,\r\n    width: 180,\r\n    backgroundColor: theme.primary,\r\n    opacity: theme.opacity.fade,\r\n    borderRadius: 100,\r\n  },\r\n  circleBorder: {\r\n    borderWidth: 2,\r\n    borderColor: theme.border,\r\n    borderRadius: 100,\r\n  },\r\n}));\r\n","import * as React from 'react';\r\nimport { View } from 'react-native';\r\nimport Animated, { useAnimatedStyle } from 'react-native-reanimated';\r\nimport { StyleSheet } from 'src/styles';\r\nimport { AnimationCompProps } from 'src/types';\r\n\r\nexport const Movement = ({ x, backgroundColor }: AnimationCompProps) => {\r\n  const animatedStyles = useAnimatedStyle(() => {\r\n    return {\r\n      transform: [{ translateY: x.value * 100 }],\r\n    };\r\n  });\r\n\r\n  return (\r\n    <View style={s.boxBorder}>\r\n      <Animated.View style={[s.box, { backgroundColor }, animatedStyles]} />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst s = StyleSheet.create((theme, constants) => ({\r\n  box: {\r\n    height: [100, 150],\r\n    width: [120, 200],\r\n    backgroundColor: theme.primary,\r\n    opacity: theme.opacity.fade,\r\n    margin: -50,\r\n  },\r\n  boxBorder: {\r\n    height: [100, 150],\r\n    width: [120, 200],\r\n    borderWidth: 2,\r\n    borderColor: theme.border,\r\n    alignItems: 'center',\r\n  },\r\n}));\r\n","import * as React from 'react';\r\nimport { Text, TouchableOpacity, View } from 'react-native';\r\nimport { StyleSheet } from 'src/styles';\r\n\r\nexport const PlayButton = ({\r\n  onPress,\r\n  animating,\r\n  stopAnimation,\r\n}: {\r\n  onPress: () => void;\r\n  animating: boolean;\r\n  stopAnimation: () => void;\r\n}) => {\r\n  const handlePress = () => {\r\n    if (animating) {\r\n      stopAnimation();\r\n    } else {\r\n      onPress();\r\n    }\r\n  };\r\n\r\n  const activeOpacity = 0.6;\r\n\r\n  const opacity = animating ? activeOpacity : 1;\r\n\r\n  return (\r\n    <View style={{ flex: 1, flexDirection: 'row' }}>\r\n      <TouchableOpacity\r\n        activeOpacity={activeOpacity}\r\n        style={[s.container, { opacity }]}\r\n        onPress={handlePress}\r\n      >\r\n        <Text style={[s.text, { opacity }]}>{animating ? 'STOP' : 'PLAY'}</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst s = StyleSheet.create((theme) => ({\r\n  container: {\r\n    height: 50,\r\n    minWidth: 220,\r\n    flex: 1,\r\n    borderRadius: 10,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: theme.primary,\r\n    marginBottom: 10,\r\n    marginHorizontal: 5,\r\n  },\r\n  text: {\r\n    fontWeight: 'bold',\r\n    letterSpacing: 2,\r\n  },\r\n}));\r\n","import * as React from 'react';\r\nimport Svg, { Path } from 'react-native-svg';\r\n\r\nfunction SvgComponent(props) {\r\n  return (\r\n    <Svg\r\n      x=\"0px\"\r\n      y=\"0px\"\r\n      viewBox=\"0 0 456.556 456.556\"\r\n      xmlSpace=\"preserve\"\r\n      enableBackground=\"new 0 0 456.556 456.556\"\r\n      {...props}\r\n    >\r\n      <Path d=\"M97.564 79.443H13.428C6.011 79.443 0 73.428 0 66.015s6.011-13.428 13.428-13.428h84.136c7.417 0 13.428 6.015 13.428 13.428s-6.011 13.428-13.428 13.428z\" />\r\n      <Path d=\"M145.643 127.518c-33.916 0-61.507-27.591-61.507-61.504 0-33.92 27.591-61.511 61.507-61.511s61.507 27.591 61.507 61.511c0 33.914-27.591 61.504-61.507 61.504zm0-96.158c-19.107 0-34.651 15.547-34.651 34.654s15.544 34.647 34.651 34.647 34.651-15.54 34.651-34.647S164.75 31.36 145.643 31.36zM443.128 79.443H242.433c-7.417 0-13.428-6.015-13.428-13.428s6.011-13.428 13.428-13.428h200.694c7.417 0 13.428 6.015 13.428 13.428s-6.01 13.428-13.427 13.428zM325.936 289.782c-33.917 0-61.507-27.591-61.507-61.504s27.591-61.504 61.507-61.504 61.507 27.591 61.507 61.504-27.59 61.504-61.507 61.504zm0-96.151c-19.107 0-34.651 15.54-34.651 34.647s15.544 34.647 34.651 34.647 34.651-15.54 34.651-34.647-15.544-34.647-34.651-34.647zM229.149 241.706H13.428C6.011 241.706 0 235.691 0 228.278s6.011-13.428 13.428-13.428h215.721c7.417 0 13.428 6.015 13.428 13.428s-6.011 13.428-13.428 13.428z\" />\r\n      <Path d=\"M443.128 241.706h-69.113c-7.417 0-13.428-6.015-13.428-13.428s6.011-13.428 13.428-13.428h69.113c7.417 0 13.428 6.015 13.428 13.428s-6.011 13.428-13.428 13.428zM130.62 452.052c-33.916 0-61.507-27.591-61.507-61.511 0-33.913 27.591-61.504 61.507-61.504s61.507 27.591 61.507 61.504c0 33.92-27.591 61.511-61.507 61.511zm0-96.158c-19.107 0-34.651 15.54-34.651 34.647s15.544 34.654 34.651 34.654 34.651-15.547 34.651-34.654-15.544-34.647-34.651-34.647zM443.128 403.97H227.407c-7.417 0-13.428-6.015-13.428-13.428 0-7.413 6.011-13.428 13.428-13.428h215.721c7.417 0 13.428 6.015 13.428 13.428 0 7.413-6.011 13.428-13.428 13.428z\" />\r\n      <Path d=\"M82.541 403.97H13.428C6.011 403.97 0 397.955 0 390.541c0-7.413 6.011-13.428 13.428-13.428h69.113c7.417 0 13.428 6.015 13.428 13.428 0 7.414-6.011 13.429-13.428 13.429z\" />\r\n    </Svg>\r\n  );\r\n}\r\n\r\nexport default SvgComponent;\r\n","import * as React from 'react';\r\nimport { TouchableOpacity, View } from 'react-native';\r\nimport { StyleSheet } from 'src/styles';\r\nimport { PlayButton } from './PlayButton';\r\nimport SettingIcon from 'src/assets/Setting';\r\n\r\nexport const Actions = ({\r\n  onPress,\r\n  animating,\r\n  stopAnimation,\r\n  handleSetting,\r\n}: {\r\n  onPress: () => void;\r\n  animating: boolean;\r\n  stopAnimation: () => void;\r\n  handleSetting: () => void;\r\n}) => {\r\n  return (\r\n    <View style={{ flexDirection: 'row' }}>\r\n      <View>\r\n        <TouchableOpacity\r\n          onPress={handleSetting}\r\n          style={{\r\n            height: 50,\r\n            paddingHorizontal: 15,\r\n            backgroundColor: StyleSheet.theme.primary,\r\n            justifyContent: 'center',\r\n            borderRadius: 10,\r\n            marginRight: 5,\r\n          }}\r\n        >\r\n          <SettingIcon fill={'#000'} height={30} width={30} />\r\n        </TouchableOpacity>\r\n      </View>\r\n      <PlayButton\r\n        animating={animating}\r\n        onPress={onPress}\r\n        title=\"play\"\r\n        stopAnimation={stopAnimation}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n","import * as React from 'react';\r\nimport { Button, View, Text } from 'react-native';\r\nimport { StyleSheet } from 'src/styles';\r\nimport RNSlider from '@react-native-community/slider';\r\nimport { InitStateType } from 'src/types';\r\n\r\nexport const Slider = ({\r\n  value,\r\n  stateKey,\r\n  handleChange,\r\n  minimumValue = 0,\r\n  maximumValue = 100,\r\n  step = 1,\r\n}: {\r\n  value: number | undefined;\r\n  stateKey: keyof InitStateType;\r\n  minimumValue?: number;\r\n  maximumValue?: number;\r\n  step?: number;\r\n  handleChange: (a: Partial<InitStateType>) => void;\r\n}) => {\r\n  const [val, setVal] = React.useState(value);\r\n\r\n  const handleFinalValue = () => {\r\n    handleChange({ [stateKey]: val });\r\n  };\r\n\r\n  const handleValueChange = (e: number) => {\r\n    const newVal = Math.floor(e * 100) / 100;\r\n    setVal(newVal);\r\n  };\r\n\r\n  return (\r\n    <View style={s.container}>\r\n      <View style={s.textContainer}>\r\n        <Text style={s.label}>{stateKey}:</Text>\r\n        <Text style={s.value}>{val}</Text>\r\n      </View>\r\n      <RNSlider\r\n        minimumValue={minimumValue}\r\n        maximumValue={maximumValue}\r\n        step={step}\r\n        value={value}\r\n        onValueChange={handleValueChange}\r\n        onSlidingComplete={handleFinalValue}\r\n        minimumTrackTintColor={StyleSheet.theme.slider}\r\n        maximumTrackTintColor=\"#808080\"\r\n        thumbTintColor={StyleSheet.theme.slider}\r\n        style={s.slider}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst s = StyleSheet.create((theme, constants) => ({\r\n  container: {\r\n    marginVertical: 5,\r\n    width: 300,\r\n  },\r\n  slider: {\r\n    width: '100%',\r\n    height: 30,\r\n  },\r\n  textContainer: {\r\n    flexDirection: 'row',\r\n  },\r\n  label: {\r\n    color: theme.text,\r\n  },\r\n  value: {\r\n    marginLeft: 6,\r\n    fontWeight: 'bold',\r\n    color: theme.text,\r\n  },\r\n}));\r\n","import * as React from 'react';\r\nimport { View, Text, TouchableOpacity, Linking } from 'react-native';\r\nimport { StyleSheet } from 'src/styles';\r\n\r\nconst ASSETS = [{ title: 'FlatIcon', url: 'https://www.flaticon.com/' }];\r\n\r\nconst TECH = [\r\n  { title: 'React Native', url: 'https://reactnative.dev/' },\r\n  { title: 'Expo', url: 'https://expo.io/' },\r\n  {\r\n    title: 'React Native Reanimated',\r\n    url: 'https://docs.swmansion.com/react-native-reanimated/',\r\n  },\r\n  {\r\n    title: 'React Native Web',\r\n    url: 'https://necolas.github.io/react-native-web/',\r\n  },\r\n  {\r\n    title: 'React Native Redash',\r\n    url: 'https://github.com/wcandillon/react-native-redash',\r\n  },\r\n  {\r\n    title: '@react-native-community/slider',\r\n    url: 'https://github.com/callstack/react-native-slider',\r\n  },\r\n  {\r\n    title: '@react-native-picker/picker',\r\n    url: 'https://www.npmjs.com/package/@react-native-community/picker',\r\n  },\r\n  {\r\n    title: 'React Native Svg',\r\n    url: 'react-native-svg',\r\n  },\r\n  {\r\n    title: 'React Native Sugar Style',\r\n    url: 'https://github.com/mohit23x/react-native-sugar-style',\r\n  },\r\n];\r\n\r\nconst Link = ({ title, url }: { title: string; url: string }) => {\r\n  const onPress = () => {\r\n    Linking.canOpenURL(url).then(() => {\r\n      return Linking.openURL(url);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <TouchableOpacity\r\n      style={{\r\n        padding: 5,\r\n      }}\r\n      onPress={onPress}\r\n    >\r\n      <Text style={s.label}>{title}</Text>\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\nexport const Attribution = () => {\r\n  return (\r\n    <View\r\n      style={{\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginVertical: 10,\r\n      }}\r\n    >\r\n      <Text style={s.label}>The assets were taken from</Text>\r\n      {ASSETS.map((d) => (\r\n        <Link {...d} />\r\n      ))}\r\n      <Text style={s.title}>Made with some amazing technologies</Text>\r\n\r\n      {TECH.map((d) => (\r\n        <Link key={d.title} title={d.title} url={d.url} />\r\n      ))}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst s = StyleSheet.create((theme) => ({\r\n  title: {\r\n    color: theme.text,\r\n    fontWeight: 'bold',\r\n    fontSize: theme.font.m,\r\n    textAlign: 'center',\r\n    marginVertical: 5,\r\n  },\r\n  label: {\r\n    color: theme.text,\r\n  },\r\n}));\r\n","import * as React from 'react';\r\nimport { View, Switch, Text, TouchableOpacity } from 'react-native';\r\nimport { ConfigType, LimitType } from 'src/constants';\r\nimport { StyleSheet } from 'src/styles';\r\nimport { Button } from './ui';\r\n\r\nexport const ConfigureLimit = ({\r\n  limit,\r\n  setConfig,\r\n  handleSave,\r\n  handleReset,\r\n}: {\r\n  limit: LimitType;\r\n  setConfig: (a: any) => void;\r\n  handleSave: () => void;\r\n  handleReset: () => void;\r\n}) => {\r\n  return (\r\n    <View>\r\n      <InputCounter\r\n        value={limit.damping}\r\n        field={'damping'}\r\n        setConfig={setConfig}\r\n      />\r\n      <InputCounter value={limit.mass} field={'mass'} setConfig={setConfig} />\r\n      <InputCounter\r\n        value={limit.stiffness}\r\n        field={'stiffness'}\r\n        setConfig={setConfig}\r\n      />\r\n      <InputCounter\r\n        value={limit.velocity}\r\n        field={'velocity'}\r\n        setConfig={setConfig}\r\n      />\r\n\r\n      <View style={s.btnContainer}>\r\n        <Button title={'RESET'} onPress={handleReset} />\r\n        <Button title={'SAVE'} onPress={handleSave} />\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst InputCounter = ({\r\n  field,\r\n  setConfig,\r\n  value,\r\n}: {\r\n  field: keyof LimitType;\r\n  setConfig: (a: any) => void;\r\n  value: number;\r\n}) => {\r\n  const increase = () => {\r\n    setConfig({ [field]: value + 2 });\r\n  };\r\n  const decrease = () => setConfig({ [field]: value - 2 });\r\n\r\n  return (\r\n    <View style={s.counterContainer}>\r\n      <View style={{ flex: 1 }}>\r\n        <Text style={s.label}>{field}</Text>\r\n      </View>\r\n      <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n        <TouchableOpacity style={s.counterBtn} onPress={decrease}>\r\n          <Text style={s.btnText}>-</Text>\r\n        </TouchableOpacity>\r\n        <Text style={s.counterValue}>{value}</Text>\r\n        <TouchableOpacity style={s.counterBtn} onPress={increase}>\r\n          <Text style={s.btnText}>+</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst s = StyleSheet.create((theme) => ({\r\n  label: {\r\n    color: theme.text,\r\n  },\r\n  counterContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginVertical: 5,\r\n  },\r\n  counterBtn: {\r\n    height: 50,\r\n    width: 50,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: theme.surface,\r\n    marginHorizontal: 10,\r\n  },\r\n  btnText: {\r\n    fontWeight: 'bold',\r\n    fontSize: theme.font.m,\r\n    color: theme.text,\r\n  },\r\n  counterValue: {\r\n    color: theme.text,\r\n    minWidth: 50,\r\n    textAlign: 'center',\r\n  },\r\n  btnContainer: {\r\n    justifyContent: ['space-evenly', 'flex-end'],\r\n    flexDirection: 'row',\r\n    marginVertical: 10,\r\n  },\r\n}));\r\n","import * as React from 'react';\r\nimport { View, Image, Modal, Switch, Text, ScrollView } from 'react-native';\r\nimport { darkTheme, lightTheme, StyleSheet } from 'src/styles';\r\nimport { Attribution } from './Attribution';\r\nimport { ConfigureLimit } from './ConfigureLimit';\r\nimport { Button, Divider } from './ui';\r\n\r\nconst DarkModeSetting = ({ isLight, toggleSwitch }) => {\r\n  return (\r\n    <View style={s.darkModeContainer}>\r\n      <Text style={{ color: StyleSheet.theme.text }}>Light Mode</Text>\r\n      <Switch\r\n        thumbColor={StyleSheet.theme.icon}\r\n        ios_backgroundColor=\"#3e3e3e\"\r\n        onValueChange={toggleSwitch}\r\n        value={isLight}\r\n        style={{ marginRight: 10 }}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport const SettingModal = ({\r\n  toggleModal,\r\n  show,\r\n  limit,\r\n  setConfig,\r\n  handleReset,\r\n  handleSave,\r\n}) => {\r\n  const [isLight, setIsLight] = React.useState(\r\n    StyleSheet.theme.name === 'light'\r\n  );\r\n\r\n  const toggleSwitch = (val) => {\r\n    setIsLight(val);\r\n    StyleSheet.build(isLight ? darkTheme : lightTheme);\r\n  };\r\n\r\n  return (\r\n    <Modal animationType=\"slide\" onRequestClose={toggleModal} visible={show}>\r\n      <ScrollView style={s.container}>\r\n        <Image\r\n          source={{ uri: 'https://reactnative.dev/img/header_logo.svg' }}\r\n          style={{\r\n            height: 100,\r\n            width: 100,\r\n            resizeMode: 'contain',\r\n            marginVertical: 20,\r\n            alignSelf: 'center',\r\n          }}\r\n        />\r\n        <DarkModeSetting isLight={isLight} toggleSwitch={toggleSwitch} />\r\n        <ConfigureLimit\r\n          limit={limit}\r\n          setConfig={setConfig}\r\n          handleSave={handleSave}\r\n          handleReset={handleReset}\r\n        />\r\n        <Divider />\r\n        <Attribution />\r\n        <Button onPress={toggleModal} title={'CLOSE'} />\r\n      </ScrollView>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst s = StyleSheet.create((theme) => ({\r\n  container: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.background,\r\n    paddingHorizontal: 10,\r\n  },\r\n  darkModeContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    marginVertical: 12,\r\n  },\r\n  label: {\r\n    color: theme.text,\r\n  },\r\n  input: {\r\n    color: theme.text,\r\n  },\r\n}));\r\n","import * as React from 'react';\r\nimport { Section } from './ui';\r\nimport { StyleSheet } from 'src/styles';\r\nimport { Actions } from './Actions';\r\nimport { Slider } from './Slider';\r\nimport { SettingModal } from './SettingModal';\r\nimport { ActionTypes } from 'src/types';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { ConfigType, DEFAULT_MAX_LIMIT, STEP } from 'src/constants';\r\n\r\nconst persistConfig = (payload: ConfigType) => {\r\n  AsyncStorage.setItem('config', JSON.stringify(payload));\r\n};\r\n\r\nexport const initState = DEFAULT_MAX_LIMIT;\r\n\r\nconst reducer = (\r\n  state: typeof initState = DEFAULT_MAX_LIMIT,\r\n  action: ActionTypes\r\n) => {\r\n  switch (action.type) {\r\n    case 'SET':\r\n      return { ...state, ...action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const InputSection = ({\r\n  onPress,\r\n  state,\r\n  handleChange,\r\n  animating,\r\n  stopAnimation,\r\n}: {\r\n  onPress: () => void;\r\n  state: ConfigType;\r\n  handleChange: () => void;\r\n  animating: boolean;\r\n  stopAnimation: () => void;\r\n}) => {\r\n  const [show, setShow] = React.useState(false);\r\n  const [LIMIT, dispatch] = React.useReducer(reducer, initState);\r\n\r\n  const toggleModal = () => setShow((c) => !c);\r\n\r\n  const getConfig = async () => {\r\n    const data = await AsyncStorage.getItem('config');\r\n    if (data) {\r\n      dispatch({ type: 'SET', payload: JSON.parse(data) });\r\n    } else {\r\n      dispatch({ type: 'SET', payload: DEFAULT_MAX_LIMIT });\r\n    }\r\n  };\r\n\r\n  const handleSave = () => {\r\n    persistConfig(LIMIT);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setConfig(DEFAULT_MAX_LIMIT);\r\n    persistConfig(DEFAULT_MAX_LIMIT);\r\n  };\r\n\r\n  const setConfig = (obj: Partial<ConfigType>) => {\r\n    const payload = Object.assign({}, LIMIT, obj);\r\n    dispatch({ type: 'SET', payload });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    getConfig();\r\n  }, []);\r\n\r\n  return (\r\n    <Section style={s.section}>\r\n      {/* <Select title={'Preset'} /> */}\r\n\r\n      <Slider\r\n        stateKey={'damping'}\r\n        value={state.damping}\r\n        handleChange={handleChange}\r\n        maximumValue={LIMIT.damping}\r\n        step={STEP.damping}\r\n      />\r\n      <Slider\r\n        stateKey={'mass'}\r\n        value={state.mass}\r\n        handleChange={handleChange}\r\n        maximumValue={LIMIT.mass}\r\n        step={STEP.mass}\r\n      />\r\n      <Slider\r\n        stateKey={'stiffness'}\r\n        value={state.stiffness}\r\n        handleChange={handleChange}\r\n        maximumValue={LIMIT.stiffness}\r\n        step={STEP.stiffness}\r\n      />\r\n      <Slider\r\n        stateKey={'velocity'}\r\n        value={state.velocity}\r\n        handleChange={handleChange}\r\n        maximumValue={LIMIT.velocity}\r\n        step={STEP.velocity}\r\n      />\r\n\r\n      <Actions\r\n        animating={animating}\r\n        onPress={onPress}\r\n        stopAnimation={stopAnimation}\r\n        handleSetting={toggleModal}\r\n      />\r\n      <SettingModal\r\n        toggleModal={toggleModal}\r\n        show={show}\r\n        limit={LIMIT}\r\n        setConfig={setConfig}\r\n        handleSave={handleSave}\r\n        handleReset={handleReset}\r\n      />\r\n    </Section>\r\n  );\r\n};\r\n\r\nconst s = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  section: {\r\n    alignItems: 'center',\r\n    justifyContent: 'space-evenly',\r\n  },\r\n});\r\n","import * as React from 'react';\r\nimport { View, Text, ScrollView, TouchableOpacity } from 'react-native';\r\nimport { StyleSheet } from 'src/styles';\r\n\r\nexport const Option = ({\r\n  option,\r\n  toggleAnimation,\r\n  active,\r\n}: {\r\n  option: any;\r\n  toggleAnimation: (a: any) => void;\r\n  active: boolean;\r\n}) => {\r\n  const Icon = option.icon;\r\n\r\n  const activeColor =\r\n    active === option.key ? option.color : StyleSheet.theme.icon;\r\n\r\n  return (\r\n    <TouchableOpacity onPress={() => toggleAnimation(option.key)}>\r\n      <View style={s.outputOption}>\r\n        <Icon fill={activeColor} style={{ transform: [{ scale: 0.7 }] }} />\r\n        <Text style={[s.outputText, { color: activeColor }]}>\r\n          {option.title}\r\n        </Text>\r\n      </View>\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\nexport const AnimationOptions = ({ options, toggleAnimation, active }) => {\r\n  return (\r\n    <View style={s.container}>\r\n      <ScrollView\r\n        contentContainerStyle={s.scroll}\r\n        horizontal={StyleSheet.constants.width > 480 ? true : false}\r\n      >\r\n        {options.map((option) => (\r\n          <Option\r\n            key={option.title}\r\n            option={option}\r\n            toggleAnimation={toggleAnimation}\r\n            active={active}\r\n          />\r\n        ))}\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst s = StyleSheet.create((theme, constants) => ({\r\n  container: {\r\n    maxWidth: [60, undefined, undefined],\r\n    maxHeight: [undefined, 70],\r\n    marginHorizontal: 8,\r\n    marginVertical: [0, 10],\r\n  },\r\n  scroll: {\r\n    backgroundColor: theme.surface,\r\n    flexGrow: 1,\r\n    justifyContent: 'space-evenly',\r\n    paddingHorizontal: 2,\r\n    borderRadius: 18,\r\n  },\r\n  outputOption: {\r\n    height: [60, 70],\r\n    width: [60, 100],\r\n    marginHorizontal: [0, 10],\r\n    marginVertical: [8, 0],\r\n    alignItems: 'center',\r\n  },\r\n  outputText: {\r\n    fontSize: 12,\r\n    marginBottom: 5,\r\n    fontWeight: 'bold',\r\n  },\r\n}));\r\n","import * as React from 'react';\r\nimport Svg, { Path } from 'react-native-svg';\r\n\r\nfunction SvgComponent(props) {\r\n  return (\r\n    <Svg\r\n      x=\"0px\"\r\n      y=\"0px\"\r\n      viewBox=\"0 0 508.8 508.8\"\r\n      xmlSpace=\"preserve\"\r\n      enableBackground=\"new 0 0 508.8 508.8\"\r\n      {...props}\r\n    >\r\n      <Path d=\"M258.448 96L211.52 60.8 258.448 25.6 239.248 0 158.176 60.8 239.248 121.6z\" />\r\n      <Path d=\"M331.232 468.144l9.344 30.592a232.201 232.201 0 0032-12.432l-13.76-28.8a201.491 201.491 0 01-27.584 10.64zM272.848 476.8v32c11.448-.005 22.88-.84 34.208-2.496L302.4 474.64a202.69 202.69 0 01-29.552 2.16zM465.368 147.256C422.247 83.191 350.074 44.781 272.848 44.8v32c110.457-.018 200.014 89.511 200.032 199.968.011 66.58-33.112 128.8-88.352 165.968l17.92 26.528c106.295-71.545 134.465-215.713 62.92-322.008z\" />\r\n      <Path d=\"M123.728 131.024L3.872 413.376l210.096 89.2 119.856-282.352-210.096-89.2zm73.296 329.6l-151.2-64.16 94.848-223.472 151.2 64.16-94.848 223.472z\" />\r\n    </Svg>\r\n  );\r\n}\r\n\r\nexport default SvgComponent;\r\n","import * as React from 'react';\r\nimport Svg, { Path } from 'react-native-svg';\r\n\r\nfunction SvgComponent(props) {\r\n  return (\r\n    <Svg viewBox=\"0 0 551.13 551.13\" {...props}>\r\n      <Path d=\"M465.016 172.228h-51.668v34.446h34.446v310.011H103.337V206.674h34.446v-34.446H86.114c-9.52 0-17.223 7.703-17.223 17.223v344.456c0 9.52 7.703 17.223 17.223 17.223h378.902c9.52 0 17.223-7.703 17.223-17.223V189.451c0-9.52-7.703-17.223-17.223-17.223z\" />\r\n      <Path d=\"M258.342 65.931v244.08h34.446V65.931l73.937 73.937 24.354-24.354L275.565 0 160.051 115.514l24.354 24.354z\" />\r\n    </Svg>\r\n  );\r\n}\r\n\r\nexport default SvgComponent;\r\n","import * as React from 'react';\r\nimport Svg, { Path } from 'react-native-svg';\r\n\r\nfunction SvgComponent(props) {\r\n  return (\r\n    <Svg\r\n      x=\"0px\"\r\n      y=\"0px\"\r\n      viewBox=\"0 0 512.568 512.568\"\r\n      xmlSpace=\"preserve\"\r\n      enableBackground=\"new 0 0 512.568 512.568\"\r\n      {...props}\r\n    >\r\n      <Path d=\"M255.284 325.284c-38.598 0-70-31.402-70-70s31.402-70 70-70 70 31.402 70 70-31.402 70-70 70zm0-100c-16.542 0-30 13.458-30 30s13.458 30 30 30 30-13.458 30-30-13.458-30-30-30zM133.426 333.142l-76.858-76.858 76.858-76.858-28.284-28.284L0 256.284l105.142 105.142 28.284-28.284zm228 74.284l-28.284-28.284L256.284 456l-73.858-73.858-28.284 28.284 102.142 102.142 105.142-105.142zm151.142-151.142L410.426 154.142l-28.284 28.284L456 256.284l-74.858 74.858 28.284 28.284 103.142-103.142zM361.426 105.142L256.284 0 153.142 103.142l28.284 28.284 74.858-74.858 76.858 76.858 28.284-28.284z\" />\r\n    </Svg>\r\n  );\r\n}\r\n\r\nexport default SvgComponent;\r\n","import * as React from 'react';\r\nimport { View, Text, ScrollView, TransformsStyle } from 'react-native';\r\nimport { Section } from './ui';\r\nimport { StyleSheet } from 'src/styles';\r\nimport { AnimatedNumber } from 'src/components/AnimatedNumber';\r\n\r\n// components\r\nimport { Rotate } from './Rotate';\r\nimport { Scale } from './Scale';\r\nimport { Movement } from './Movement';\r\nimport { AnimationOptions } from './AnimationOptions';\r\n\r\n// assets\r\nimport RotateIcon from 'src/assets/Rotate';\r\nimport MoveIcon from 'src/assets/Move';\r\nimport ScaleIcon from 'src/assets/Scale';\r\nimport Animated from 'react-native-reanimated';\r\n\r\nexport const examples = {\r\n  rotate: {\r\n    title: 'Rotate',\r\n    component: Rotate,\r\n    icon: RotateIcon,\r\n    color: '#eb4d4b',\r\n  },\r\n  scale: {\r\n    title: 'Scale',\r\n    component: Scale,\r\n    icon: ScaleIcon,\r\n    color: '#10ac84',\r\n  },\r\n  movement: {\r\n    title: 'Move',\r\n    component: Movement,\r\n    icon: MoveIcon,\r\n    color: '#f368e0',\r\n  },\r\n};\r\n\r\nexport type KeyType = keyof typeof examples;\r\n\r\nexport const renderComponent = (key: KeyType) => {\r\n  return examples[key].component;\r\n};\r\n\r\nexport const options = Object.keys(examples).map((d) => {\r\n  const item = examples[d];\r\n  return { title: item.title, icon: item.icon, key: d, color: item.color };\r\n});\r\n\r\nexport const OutputSection = ({\r\n  x,\r\n  stopAnimation,\r\n}: {\r\n  x: Animated.SharedValue<number>;\r\n  stopAnimation: () => void;\r\n}) => {\r\n  const [active, setActive] = React.useState<KeyType>('rotate');\r\n\r\n  const toggleAnimation = (name: KeyType) => {\r\n    stopAnimation();\r\n    setActive(name);\r\n  };\r\n\r\n  const AnimationComp = renderComponent(active);\r\n\r\n  return (\r\n    <Section>\r\n      <View style={s.head}>\r\n        <Text style={s.title}>{examples[active].title}</Text>\r\n        <AnimatedNumber x={x} />\r\n      </View>\r\n      <View style={s.container}>\r\n        <View style={s.playground}>\r\n          <AnimationComp x={x} backgroundColor={examples[active].color} />\r\n        </View>\r\n        <AnimationOptions\r\n          active={active}\r\n          options={options}\r\n          toggleAnimation={toggleAnimation}\r\n        />\r\n      </View>\r\n    </Section>\r\n  );\r\n};\r\n\r\nconst s = StyleSheet.create((theme) => ({\r\n  container: {\r\n    flexDirection: ['row', 'column'],\r\n    flex: 1,\r\n  },\r\n  head: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    marginHorizontal: 10,\r\n  },\r\n  title: {\r\n    fontSize: theme.font.l,\r\n    color: theme.text,\r\n  },\r\n  playground: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  box: {\r\n    height: 180,\r\n    width: 180,\r\n    backgroundColor: theme.primary,\r\n    opacity: theme.opacity.fade,\r\n  },\r\n  boxBorder: {\r\n    borderWidth: 2,\r\n    borderColor: theme.border,\r\n  },\r\n}));\r\n","import * as React from 'react';\r\nimport { TouchableOpacity, View, ViewStyle, Text } from 'react-native';\r\nimport { StyleSheet } from 'src/styles';\r\n\r\ntype Props = {\r\n  style?: ViewStyle;\r\n  children?: React.ReactNode | React.ReactNode[];\r\n};\r\n\r\nexport const Container = ({ style, ...props }: Props) => {\r\n  return <View style={[s.container, style]} {...props} />;\r\n};\r\n\r\nexport const Section = ({ style, ...props }: Props) => {\r\n  return <View style={[s.section, style]} {...props} />;\r\n};\r\n\r\nexport const Divider = () => {\r\n  return <View style={s.divider} />;\r\n};\r\n\r\nexport const Button = ({ onPress, title }) => {\r\n  return (\r\n    <TouchableOpacity style={[s.btn]} onPress={onPress}>\r\n      <Text>{title}</Text>\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\nconst s = StyleSheet.create((theme, constants) => ({\r\n  container: {\r\n    flex: 1,\r\n    flexDirection: ['column-reverse', 'row'],\r\n    backgroundColor: theme.background,\r\n    paddingHorizontal: [undefined, undefined, 100],\r\n  },\r\n  section: {\r\n    flex: 1,\r\n    maxHeight: [constants.height / 2, constants.height],\r\n    marginVertical: [undefined, undefined, '5%'],\r\n  },\r\n  divider: {\r\n    height: 1,\r\n    width: '100%',\r\n    backgroundColor: theme.border,\r\n  },\r\n  btn: {\r\n    minHeight: 50,\r\n    flex: 1,\r\n    maxWidth: 200,\r\n    minWidth: 100,\r\n    borderRadius: 10,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: theme.secondary,\r\n    marginHorizontal: 10,\r\n    alignSelf: 'center',\r\n    marginVertical: 5,\r\n  },\r\n}));\r\n","export const DEFAULT_CONFIG = {\r\n  damping: 10,\r\n  mass: 1,\r\n  stiffness: 100,\r\n  velocity: 1,\r\n};\r\n\r\nexport const DEFAULT_MAX_LIMIT = {\r\n  damping: 14,\r\n  mass: 5,\r\n  stiffness: 300,\r\n  velocity: 100,\r\n};\r\n\r\nexport const STEP = {\r\n  damping: 0.5,\r\n  mass: 0.1,\r\n  stiffness: 1,\r\n  velocity: 1,\r\n};\r\n\r\nexport type ConfigType = typeof DEFAULT_CONFIG;\r\nexport type LimitType = typeof DEFAULT_MAX_LIMIT;\r\n"],"sourceRoot":""}